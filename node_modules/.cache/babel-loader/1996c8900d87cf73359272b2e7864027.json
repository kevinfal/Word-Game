{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\OneDrive\\\\Desktop\\\\Projects\\\\word-game\\\\src\\\\App.js\";\nimport './App.css'; //import React, { Component } from 'react';\n\nimport GameWindow from './components/gameWindow';\nimport text from './data/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction makeCharList() {\n  const str = text;\n  console.log(str); // \"some sample text\"\n\n  console.log(str.length);\n}\n\nreadTextFile = file => {\n  var rawFile = new XMLHttpRequest();\n  rawFile.open(\"GET\", file, false);\n\n  rawFile.onreadystatechange = () => {\n    if (rawFile.readyState === 4) {\n      if (rawFile.status === 200 || rawFile.status == 0) {\n        var allText = rawFile.responseText;\n        this.setState({\n          text: allText\n        });\n      }\n    }\n  };\n\n  rawFile.send(null);\n};\n\nfunction App() {\n  fetch('./data/chardata.json').then(res => res.json()).then(data => {\n    console.log('text:', data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GameWindow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n/*\ntodo:\n  get chars from list (by frequency)\n  get # of chars from input\n  send those chars to new gamewindow\n  check if word made is correct\n  assign points\n  make new gamewindow\n*/\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kevin/OneDrive/Desktop/Projects/word-game/src/App.js"],"names":["GameWindow","text","makeCharList","str","console","log","length","readTextFile","file","rawFile","XMLHttpRequest","open","onreadystatechange","readyState","status","allText","responseText","setState","send","App","fetch","then","res","json","data"],"mappings":";AAAA,OAAO,WAAP,C,CACA;;AACA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AACA,SAASC,YAAT,GAAuB;AACrB,QAAMC,GAAG,GAAGF,IAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAFqB,CAEH;;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;AACD;;AACDC,YAAY,GAAGC,IAAI,IAAI;AACrB,MAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,EAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBH,IAApB,EAA0B,KAA1B;;AACAC,EAAAA,OAAO,CAACG,kBAAR,GAA6B,MAAM;AACjC,QAAIH,OAAO,CAACI,UAAR,KAAuB,CAA3B,EAA8B;AAC5B,UAAIJ,OAAO,CAACK,MAAR,KAAmB,GAAnB,IAA0BL,OAAO,CAACK,MAAR,IAAkB,CAAhD,EAAmD;AACjD,YAAIC,OAAO,GAAGN,OAAO,CAACO,YAAtB;AACA,aAAKC,QAAL,CAAc;AACZhB,UAAAA,IAAI,EAAEc;AADM,SAAd;AAGD;AACF;AACF,GATD;;AAUAN,EAAAA,OAAO,CAACS,IAAR,CAAa,IAAb;AACD,CAdD;;AAeA,SAASC,GAAT,GAAe;AACbC,EAAAA,KAAK,CAAC,sBAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOG,IAAD,IAAU;AACdpB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBmB,IAArB;AACD,GAJD;AAKA,sBACE;AAAA,2BAAK,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAID;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAnBSL,G;AAoBT,eAAeA,GAAf","sourcesContent":["import './App.css';\n//import React, { Component } from 'react';\nimport GameWindow from './components/gameWindow';\nimport text from './data/data';\nfunction makeCharList(){\n  const str = text;\n  console.log(str); // \"some sample text\"\n  console.log(str.length);\n}\nreadTextFile = file => {\n  var rawFile = new XMLHttpRequest();\n  rawFile.open(\"GET\", file, false);\n  rawFile.onreadystatechange = () => {\n    if (rawFile.readyState === 4) {\n      if (rawFile.status === 200 || rawFile.status == 0) {\n        var allText = rawFile.responseText;\n        this.setState({\n          text: allText\n        });\n      }\n    }\n  };\n  rawFile.send(null);\n};\nfunction App() {\n  fetch('./data/chardata.json')\n  .then((res) => res.json())\n  .then((data) => {\n    console.log('text:', data);\n  })\n  return (\n    <div><GameWindow/></div>\n    \n  );\n}\n/*\ntodo:\n  get chars from list (by frequency)\n  get # of chars from input\n  send those chars to new gamewindow\n  check if word made is correct\n  assign points\n  make new gamewindow\n*/\nexport default App;\n"]},"metadata":{},"sourceType":"module"}